Applying Styles Directly to HTML Elements
Inline Styles are a method of applying CSS styles directly to individual HTML elements using the style attribute. This allows for quick and easy style changes, but it's generally not recommended for large or complex websites due to its limitations.

Example HTML Document
HTML
<!DOCTYPE html>
<html>
<head>
    <title>Inline Styles Example</title>
</head>
<body>
    <h1 style="color: red; font-size: 48px;">Heading 1</h1>
    <p style="font-family: Arial; font-size: 18px;">This is a paragraph.</p>
    <div style="background-color: lightblue; padding: 20px;">
        <p style="color: green;">Paragraph within a div.</p>
    </div>
</body>
</html>
Use code with caution.

In this example:

The <h1> element has color: red and font-size: 48px applied directly.
The <p> element has font-family: Arial and font-size: 18px applied directly.
The <div> element has background-color: lightblue and padding: 20px applied directly.
The <p> element within the <div> has color: green applied directly.
Pros of Inline Styles
Quick and Easy: Styles can be applied directly to elements without needing to create separate CSS files or reference them in the HTML.
Immediate Changes: Changes made to inline styles are immediately reflected in the browser without requiring a page refresh.
Cons of Inline Styles
Poor Maintainability: Styles are scattered throughout the HTML code, making it difficult to manage and update.
Lack of Reusability: Styles cannot be easily reused across multiple elements or pages.
Reduced Readability: Inline styles can clutter the HTML code, making it harder to understand the structure and content.
Overriding External Styles: Inline styles can override styles defined in external stylesheets, leading to unexpected results.
Conclusion:

While inline styles can be convenient for simple and temporary style changes, they are generally not recommended for large or complex websites due to their limitations. Using external stylesheets is a more organized and maintainable approach for managing CSS styles.